# $Id: Dockerfile-kafka-alpine 431 2021-10-06 06:48:09Z bpahlawa $
# $Author: bpahlawa $
# Created: 26-APR-2021
# Modified by: bpahlawa
# $Date: 2021-10-06 14:48:09 +0800 (Wed, 06 Oct 2021) $
# $Revision: 431 $
#
# Server #1 (zookeper and kafka server #1)
#docker run -it --name kafka1 -p 9092:9092 -p 2181:2181 -p 2999-3000:2999-3000 -e ZOOKEEPER_ID=1 -e ZOOKEEPER_SERVER1="192.168.0.158:2999:3000" -e ZOOKEEPER_SERVER2="192.168.0.158:3001:3002" -e ZOOKEEPER_SERVER3="192.168.0.158:3003:3004" -e ZOOKEEPER_CLIENT_PORT1=2181 -e ZOOKEEPER_CLIENT_PORT2=2182 -e ZOOKEEPER_CLIENT_PORT3=2183 -e KAFKA_INIT_CONFIG=yes -v /opt/kafka:/opt/kafkadata kafka
#
# Server #2 (zookeeper and kafka server #2)
#docker run -it --name kafka2 -p 9093:9093 -p 2182:2182 -p 3001-3002:3001-3002 -e ZOOKEEPER_ID=2 -e KAFKA_BROKER_ID=1 -e KAFKA_PORT=9093 -e ZOOKEEPER_SERVER1="192.168.0.158:2999:3000" -e ZOOKEEPER_SERVER2="192.168.0.158:3001:3002" -e ZOOKEEPER_SERVER3="192.168.0.158:3003:3004" -e ZOOKEEPER_CLIENT_PORT1=2181 -e ZOOKEEPER_CLIENT_PORT2=2182 -e ZOOKEEPER_CLIENT_PORT3=2183 -e KAFKA_INIT_CONFIG=yes -v /opt/kafka2:/opt/kafkadata kafka
#
# Server #3 (zookeeper and kafka server #3)
#docker run -it --name kafka3 -p 9094:9094 -p 2183:2183 -p 3003-3004:3003-3004 -e ZOOKEEPER_ID=3 -e KAFKA_BROKER_ID=2 -e KAFKA_PORT=9094 -e ZOOKEEPER_SERVER1="192.168.0.158:2999:3000" -e ZOOKEEPER_SERVER2="192.168.0.158:3001:3002" -e ZOOKEEPER_SERVER3="192.168.0.158:3003:3004" -e ZOOKEEPER_CLIENT_PORT1=2181 -e ZOOKEEPER_CLIENT_PORT2=2182 -e ZOOKEEPER_CLIENT_PORT3=2183 -e KAFKA_INIT_CONFIG=yes -v /opt/kafka3:/opt/kafkadata kafka
#
# add entrypoint.sh in base64 to Dockerfile
# echo -e " && echo \"$(cat kafka.env | base64 -w0)\" | base64 -d > /usr/local/bin/kafka.env && chmod ugo+x /usr/local/bin/kafka.env \\" >> Dockerfile-kafka-alpine
# echo -e " && echo \"$(cat entrypoint-kafka.sh | base64 -w0)\" | base64 -d > /usr/local/bin/entrypoint-kafka.sh && chmod ugo+x /usr/local/bin/entrypoint-kafka.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint-kafka.sh\"]" >> Dockerfile-kafka-alpine


# docker build --tag kafka -f ./Dockerfile-kafka-alpine /tmp

FROM alpine:latest
MAINTAINER brpahlawa

ENV KAFKA_VER=3.0.0 KAFKA_HOME=/opt/kafka

RUN apk update \
 && apk upgrade \
 && apk add bash coreutils su-exec curl ca-certificates jq openjdk11-jre gnupg procps \
 && mkdir -p $KAFKA_HOME \
 && wget -O /tmp/KEYS https://downloads.apache.org/kafka/KEYS \
 && gpg --import /tmp/KEYS \
 && wget -q -O /tmp/kafka.tgz https://downloads.apache.org/kafka/${KAFKA_VER}/kafka_2.13-${KAFKA_VER}.tgz \
 && wget -O /tmp/kafka.asc https://downloads.apache.org/kafka/${KAFKA_VER}/kafka_2.13-${KAFKA_VER}.tgz.asc \
 && gpg --verify /tmp/kafka.asc /tmp/kafka.tgz \
 && tar xvfz /tmp/kafka.tgz -C $KAFKA_HOME  --strip-components 1 \
 && mv $KAFKA_HOME/config $KAFKA_HOME/.kafka \
 && ln -sf $KAFKA_HOME/../kafkadata/config $KAFKA_HOME/config \
 && ln -sf $KAFKA_HOME/../kafkadata/logs $KAFKA_HOME/logs \
 && adduser -D -h $KAFKA_HOME -s /bin/bash kafka \
 && mkdir -p $KAFKA_HOME/../kafkadata \
 && touch $KAFKA_HOME/../kafkadata/notmapped \
 && chown -R kafka:kafka $KAFKA_HOME \
 && rm -rf /tmp/* /var/tmp/* \
 && echo "export KAFKA_HOME=/opt/kafka" > $KAFKA_HOME/.bash_profile \
 && echo "export JAVA_HOME=/usr/lib/jvm/default-jvm" >> $KAFKA_HOME/.bash_profile \
 && echo "export PATH=\$KAFKA_HOME/bin:\$PATH:~/.local/bin:\$JAVA_HOME/bin:\$JAVA_HOME/jre/bin" >> $KAFKA_HOME/.bash_profile \
 && chown kafka:kafka $KAFKA_HOME/.bash_profile \
 && echo "IyEvYmluL2Jhc2gKIyAkSWQ6IGthZmthLmVudiA0MzAgMjAyMS0xMC0wNCAxNToyOToxM1ogYnBhaGxhd2EgJAojIENyZWF0ZWQgMDUtTUFSLTIwMTkKIyAkQXV0aG9yOiBicGFobGF3YSAkCiMgJERhdGU6IDIwMjEtMTAtMDQgMjM6Mjk6MTMgKzA4MDAgKE1vbiwgMDQgT2N0IDIwMjEpICQKIyAkUmV2aXNpb246IDQzMCAkCiMKCmV4cG9ydCBaT09LRUVQRVJfREFUQV9ESVI9JHtaT09LRUVQRVJfREFUQV9ESVI6LSIvb3B0L2thZmthZGF0YS96b29rZWVwZXIifQpleHBvcnQgWk9PS0VFUEVSX0NMSUVOVF9QT1JUMT0ke1pPT0tFRVBFUl9DTElFTlRfUE9SVDE6LTIxODF9CiNaT09LRUVQRVJfQURNU0VSVkVSX0VOQUJMRUQ9JHtaT09LRUVQRVJfQURNU0VSVkVSX0VOQUJMRUQ6LSJ0cnVlIn0KI1pPT0tFRVBFUl9BRE1TRVJWRVJfUE9SVD0ke1pPT0tFRVBFUl9BRE1TRVJWRVJfUE9SVDotODA4MX0KI1pPT0tFRVBFUl9NQVhDTElFTlRfQ09OTkVDVElPTlM9JHtaT09LRUVQRVJfTUFYQ0xJRU5UX0NPTk5FQ1RJT05TOi0wfQojWk9PS0VFUEVSX0NPTk5FQ1RJT05fVElNRU9VVD0ke1pPT0tFRVBFUl9DT05ORUNUSU9OX1RJTUVPVVQ6LTE4MDAwfQpleHBvcnQgWk9PS0VFUEVSX1NFUlZFUl9OQU1FPSR7Wk9PS0VFUEVSX1NFUlZFUl9OQU1FOi0iJChob3N0bmFtZSAtaSkifQpleHBvcnQgWk9PS0VFUEVSX1NFUlZFUjE9JHtaT09LRUVQRVJfU0VSVkVSMTotIiJ9CmV4cG9ydCBaT09LRUVQRVJfSUQ9JHtaT09LRUVQRVJfSUQ6LSIxIn0KZXhwb3J0IFpPT0tFRVBFUl9DTElFTlRfUE9SVDI9JHtaT09LRUVQRVJfQ0xJRU5UX1BPUlQyOi0yMTgxfQpleHBvcnQgWk9PS0VFUEVSX0NMSUVOVF9QT1JUMz0ke1pPT0tFRVBFUl9DTElFTlRfUE9SVDM6LTIxODF9CmV4cG9ydCBaT09LRUVQRVJfU0VSVkVSMj0ke1pPT0tFRVBFUl9TRVJWRVIyOi0iIn0KZXhwb3J0IFpPT0tFRVBFUl9TRVJWRVIzPSR7Wk9PS0VFUEVSX1NFUlZFUjM6LSIifQoKZXhwb3J0IEtBRktBX0lOSVRfQ09ORklHPSR7S0FGS0FfSU5JVF9DT05GSUc6LSJubyJ9CiNib3RoPWthZmthIGFuZCB6b29rZWVwZXIKZXhwb3J0IE5PREVfVVNBR0U9JHtOT0RFX1VTQUdFOi0iYm90aCJ9CmV4cG9ydCBLQUZLQV9CUk9LRVJfSUQ9JHtLQUZLQV9CUk9LRVJfSUQ6LSIwIn0KZXhwb3J0IEtBRktBX0JST0tFUl9SQUNLPSR7S0FGS0FfQlJPS0VSX1JBQ0s6LSJyYWNrMSJ9CiNLQUZLQV9ORVRXT1JLX1RIUkVBRFM9JHtLQUZLQV9ORVRXT1JLX1RIUkVBRFM6LTN9CiNLQUZLQV9JT19USFJFQURTPSR7S0FGS0FfSU9fVEhSRUFEUzotOH0KI0tBRktBX1NPQ0tTRU5EX0JVRkZFUj0ke0tBRktBX1NPQ0tTRU5EX0JVRkZFUjotMTAyNDAwfQojS0FGS0FfU09DS1JFQ1ZfQlVGRkVSPSR7S0FGS0FfU09DS1JFQ1ZfQlVGRkVSOi0xMDI0MDB9CiNLQUZLQV9TT0NLUkVRX01BWEJZVEVTPSR7S0FGS0FfU09DS1JFUV9NQVhCWVRFUzotMTA0ODU3NjAwfQpleHBvcnQgS0FGS0FfTE9HU19ESVI9JHtLQUZLQV9MT0dTX0RJUjotIi9vcHQva2Fma2FkYXRhL2xvZ3MifQojS0FGS0FfTlVNX1BBUlRJVElPTlM9JHtLQUZLQV9OVU1fUEFSVElUSU9OUzotMX0KI0tBRktBX1JFQ09USFJFQURfUEVSREFUQURJUj0ke0tBRktBX1JFQ09USFJFQURfUEVSREFUQURJUjotMX0KI0tBRktBX09GRlNFVFNUT1BJQ19SRVBMSUNBRkFDVE9SPSR7S0FGS0FfT0ZGU0VUU1RPUElDX1JFUExJQ0FGQUNUT1I6LTF9CiNLQUZLQV9UUkFOU1RBVEVMT0dfUkVQTElDQUZBQ1RPUj0ke0tBRktBX1RSQU5TVEFURUxPR19SRVBMSUNBRkFDVE9SOi0xfQojS0FGS0FfVFJBTlNUQVRFTE9HX01JTklTUj0ke0tBRktBX1RSQU5TVEFURUxPR19NSU5JU1I6LTF9CiNLQUZLQV9MT0dGTFVTSF9JTlRFUlZBTE1TRz0ke0tBRktBX0xPR0ZMVVNIX0lOVEVSVkFMTVNHOi0xMDAwMH0KI0tBRktBX0xPR0ZMVVNIX0lOVEVSVkFMVElNRT0ke0tBRktBX0xPR0ZMVVNIX0lOVEVSVkFMVElNRTotMTAwfQojS0FGS0FfTE9HUkVURU5USU9OX0hPVVJTPSR7S0FGS0FfTE9HUkVURU5USU9OX0hPVVJTOi0xNjh9CiNLQUZLQV9MT0dSRVRFTlRJT05fQllURVM9JHtLQUZLQV9MT0dSRVRFTlRJT05fQllURVM6LTEwNzM3NDE4MjR9CiNLQUZLQV9MT0dSRVRFTlRJT05fQ0hFQ0tJTlRFUlZBTD0ke0tBRktBX0xPR1JFVEVOVElPTl9DSEVDS0lOVEVSVkFMOi0zMDAwMDB9CiNLQUZLQV9MT0dTRUdNRU5UX0JZVEVTPSR7S0FGS0FfTE9HU0VHTUVOVF9CWVRFUzotMTA3Mzc0MTgyNH0KZXhwb3J0IEtBRktBX1BPUlQ9JHtLQUZLQV9QT1JUOi0iOTA5MiJ9CmV4cG9ydCBLQUZLQV9IT1NUX1BPUlQ9JHtLQUZLQV9IT1NUX1BPUlQ6LSQoaG9zdG5hbWUgLWkpOiRLQUZLQV9QT1JUfQpleHBvcnQgS0FGS0FfQk9PVFNUUkFQX1NFUlZFUlM9JHtLQUZLQV9CT09UU1RSQVBfU0VSVkVSUzotJEtBRktBX0hPU1RfUE9SVH0KI0tBRktBX0NPTVBSRVNTSU9OX1RZUEU9JHtLQUZLQV9DT01QUkVTU0lPTl9UWVBFOi0ibm9uZSJ9CmV4cG9ydCBLQUZLQV9QQVJUSVRJT05FUl9DTEFTUz0ke0tBRktBX1BBUlRJVElPTkVSX0NMQVNTOi0iIn0KZXhwb3J0IEtBRktBX1JFUVVFU1RfVElNRU9VVD0ke0tBRktBX1JFUVVFU1RfVElNRU9VVDotIiJ9CmV4cG9ydCBLQUZLQV9NQVhfQkxPQ0s9JHtLQUZLQV9NQVhfQkxPQ0s6LSIifQpleHBvcnQgS0FGS0FfTElOR0VSPSR7S0FGS0FfTElOR0VSOi0iIn0KZXhwb3J0IEtBRktBX01BWFJFUV9TSVpFPSR7S0FGS0FfTUFYUkVRX1NJWkU6LSIifQpleHBvcnQgS0FGS0FfQkFUQ0hfU0laRT0ke0tBRktBX0JBVENIX1NJWkU6LSIifQpleHBvcnQgS0FGS0FfQlVGRkVSX01FTU9SWT0ke0tBRktBX0JVRkZFUl9NRU1PUlk6LSIifQpleHBvcnQgS0FGS0FfTElTVEVORVJTPSR7S0FGS0FfTElTVEVORVJTOi0iUExBSU5URVhUOi8vJHtLQUZLQV9IT1NUX1BPUlR9In0KCiNLQUZLQV9JT19GSUxFQlVGRkVSPSR7S0FGS0FfSU9fRklMRUJVRkZFUjotMTMxMDcyfQojS0FGS0FfQVVUT09GRlNFVF9SRVNFVAo=" | base64 -d > /usr/local/bin/kafka.env && chmod ugo+x /usr/local/bin/kafka.env \
 && echo "" | base64 -d > /usr/local/bin/entrypoint-kafka.sh && chmod ugo+x /usr/local/bin/entrypoint-kafka.sh
ENTRYPOINT ["/usr/local/bin/entrypoint-kafka.sh"]
